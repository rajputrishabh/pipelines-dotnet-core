trigger:
- master

pool:
  vmImage: ubuntu-latest

steps: 
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo 'Present working directory is $(System.DefaultWorkingDirectory)'
      echo 'Artifact directory is $(Build.ArtifactStagingDirectory)'
- task: UseDotNet@2
  displayName: Set dotnet sdk
  inputs:
    packageType: 'sdk'
    version: '2.x'
    includePreviewVersions: true

- task: UseDotNet@2
  displayName: Set dotnet runtime
  inputs:
    packageType: 'runtime'
    version: '2.x'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: Restore packages
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: Build artifact
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Running test
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Collecting code coverage
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
- task: DotNetCoreCLI@2
  displayName: Dotnet publish
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: Publish artifact
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'MYartifact'
    publishLocation: 'Container'



